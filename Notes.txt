* JavaScript arrays --> JSON using https://github.com/douglascrockford/JSON-js/blob/master/json2.js
* Need to have modularity to allow decoupling of form creation UI and JSON writing.
	* You should be able to pass it a form - which then gets broken down into an array and jammed into JSON and passed out.
* A simple implementation of JSON.stringify() that you can attach to JQuery:
    jQuery.extend({stringify:function(a){var c=typeof a;if(c!="object"||a===null)return c=="string"&&(a='"'+a+'"'),String(a);else{var d,b,f=[],e=a&&a.constructor==Array;for(d in a)b=a[d],c=typeof b,a.hasOwnProperty(d)&&(c=="string"?b='"'+b+'"':c=="object"&&b!==null&&(b=jQuery.stringify(b)),f.push((e?"":'"'+d+'":')+String(b)));return(e?"[":"{")+String(f)+(e?"]":"}")}}});

* OR: https://gist.github.com/754454
* OR if either is too dodgy: https://code.google.com/p/jquery-json/

* jQuery.makeArray(obj) is interesting. May be an alternative to DOM walking.

    IMPLEMENTATION:
======================
* For each DOM child node we need to extract information that JQuery.dForm can use to rebuild.
    * This information is put into the html: {...} secion of the JSON.
    * Each node is its own object in the JSON "{...}"
    * Pretty much everything can be done so we must have default cases for things to fall through into.

